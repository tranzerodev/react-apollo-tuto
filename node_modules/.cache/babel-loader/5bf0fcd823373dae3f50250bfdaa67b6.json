{"ast":null,"code":"import { InvariantError } from 'ts-invariant';\n\nvar checkFetcher = function (fetcher) {\n  if (!fetcher && typeof fetch === 'undefined') {\n    throw process.env.NODE_ENV === \"production\" ? new InvariantError(6) : new InvariantError(\"\\n\\\"fetch\\\" has not been found globally and no fetcher has been configured. To fix this, install a fetch package (like https://www.npmjs.com/package/cross-fetch), instantiate the fetcher, and pass it into your HttpLink constructor. For example:\\n\\nimport fetch from 'cross-fetch';\\nimport { ApolloClient, HttpLink } from '@apollo/client';\\nconst client = new ApolloClient({\\n  link: new HttpLink({ uri: '/graphql', fetch })\\n});\\n    \");\n  }\n};\n\nexport { checkFetcher };","map":{"version":3,"sources":["checkFetcher.js"],"names":[],"mappings":";;AACU,IAAC,YAAY,GAAG,UAAU,OAAV,EAAmB;AACzC,MAAI,CAAC,OAAD,IAAY,OAAO,KAAP,KAAiB,WAAjC,EAA8C;AAC1C,UAAM,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAAzB,GAAwC,IAAI,cAAJ,CAAmB,CAAnB,CAAxC,GAAgE,IAAI,cAAJ,CAAmB,obAAnB,CAAtE;AACH;AACL,CAJU","sourcesContent":["import { InvariantError } from 'ts-invariant';\nexport var checkFetcher = function (fetcher) {\n    if (!fetcher && typeof fetch === 'undefined') {\n        throw new InvariantError(\"\\n\\\"fetch\\\" has not been found globally and no fetcher has been configured. To fix this, install a fetch package (like https://www.npmjs.com/package/cross-fetch), instantiate the fetcher, and pass it into your HttpLink constructor. For example:\\n\\nimport fetch from 'cross-fetch';\\nimport { ApolloClient, HttpLink } from '@apollo/client';\\nconst client = new ApolloClient({\\n  link: new HttpLink({ uri: '/graphql', fetch })\\n});\\n    \");\n    }\n};\n//# sourceMappingURL=checkFetcher.js.map"]},"metadata":{},"sourceType":"module"}