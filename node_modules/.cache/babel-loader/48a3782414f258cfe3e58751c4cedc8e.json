{"ast":null,"code":"import { __assign } from 'tslib';\nimport { invariant, InvariantError } from 'ts-invariant';\nimport { ApolloLink } from './link/core/ApolloLink.js';\nimport { execute } from './link/core/execute.js';\nimport { LocalState } from './core/LocalState.js';\nimport { QueryManager } from './core/QueryManager.js';\nimport { version } from './version.js';\nimport { HttpLink } from './link/http/HttpLink.js';\nvar hasSuggestedDevtools = false;\n\nvar ApolloClient = function () {\n  function ApolloClient(options) {\n    var _this = this;\n\n    this.defaultOptions = {};\n    this.resetStoreCallbacks = [];\n    this.clearStoreCallbacks = [];\n    var uri = options.uri,\n        credentials = options.credentials,\n        headers = options.headers,\n        cache = options.cache,\n        _a = options.ssrMode,\n        ssrMode = _a === void 0 ? false : _a,\n        _b = options.ssrForceFetchDelay,\n        ssrForceFetchDelay = _b === void 0 ? 0 : _b,\n        connectToDevTools = options.connectToDevTools,\n        _c = options.queryDeduplication,\n        queryDeduplication = _c === void 0 ? true : _c,\n        defaultOptions = options.defaultOptions,\n        _d = options.assumeImmutableResults,\n        assumeImmutableResults = _d === void 0 ? false : _d,\n        resolvers = options.resolvers,\n        typeDefs = options.typeDefs,\n        fragmentMatcher = options.fragmentMatcher,\n        clientAwarenessName = options.name,\n        clientAwarenessVersion = options.version;\n    var link = options.link;\n\n    if (!link) {\n      link = uri ? new HttpLink({\n        uri: uri,\n        credentials: credentials,\n        headers: headers\n      }) : ApolloLink.empty();\n    }\n\n    if (!cache) {\n      throw process.env.NODE_ENV === \"production\" ? new InvariantError(1) : new InvariantError(\"To initialize Apollo Client, you must specify a 'cache' property \" + \"in the options object. \\n\" + \"For more information, please visit: https://go.apollo.dev/c/docs\");\n    }\n\n    this.link = link;\n    this.cache = cache;\n    this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n    this.queryDeduplication = queryDeduplication;\n    this.defaultOptions = defaultOptions || {};\n    this.typeDefs = typeDefs;\n\n    if (ssrForceFetchDelay) {\n      setTimeout(function () {\n        return _this.disableNetworkFetches = false;\n      }, ssrForceFetchDelay);\n    }\n\n    this.watchQuery = this.watchQuery.bind(this);\n    this.query = this.query.bind(this);\n    this.mutate = this.mutate.bind(this);\n    this.resetStore = this.resetStore.bind(this);\n    this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n    var defaultConnectToDevTools = process.env.NODE_ENV !== 'production' && typeof window !== 'undefined' && !window.__APOLLO_CLIENT__;\n\n    if (typeof connectToDevTools === 'undefined' ? defaultConnectToDevTools : connectToDevTools && typeof window !== 'undefined') {\n      window.__APOLLO_CLIENT__ = this;\n    }\n\n    if (!hasSuggestedDevtools && process.env.NODE_ENV !== 'production') {\n      hasSuggestedDevtools = true;\n\n      if (typeof window !== 'undefined' && window.document && window.top === window.self) {\n        if (typeof window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n          if (window.navigator && window.navigator.userAgent && window.navigator.userAgent.indexOf('Chrome') > -1) {\n            console.debug('Download the Apollo DevTools ' + 'for a better development experience: ' + 'https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm');\n          }\n        }\n      }\n    }\n\n    this.version = version;\n    this.localState = new LocalState({\n      cache: cache,\n      client: this,\n      resolvers: resolvers,\n      fragmentMatcher: fragmentMatcher\n    });\n    this.queryManager = new QueryManager({\n      cache: this.cache,\n      link: this.link,\n      queryDeduplication: queryDeduplication,\n      ssrMode: ssrMode,\n      clientAwareness: {\n        name: clientAwarenessName,\n        version: clientAwarenessVersion\n      },\n      localState: this.localState,\n      assumeImmutableResults: assumeImmutableResults,\n      onBroadcast: function () {\n        if (_this.devToolsHookCb) {\n          _this.devToolsHookCb({\n            action: {},\n            state: {\n              queries: _this.queryManager.getQueryStore(),\n              mutations: _this.queryManager.mutationStore.getStore()\n            },\n            dataWithOptimisticResults: _this.cache.extract(true)\n          });\n        }\n      }\n    });\n  }\n\n  ApolloClient.prototype.stop = function () {\n    this.queryManager.stop();\n  };\n\n  ApolloClient.prototype.watchQuery = function (options) {\n    if (this.defaultOptions.watchQuery) {\n      options = __assign(__assign({}, this.defaultOptions.watchQuery), options);\n    }\n\n    if (this.disableNetworkFetches && (options.fetchPolicy === 'network-only' || options.fetchPolicy === 'cache-and-network')) {\n      options = __assign(__assign({}, options), {\n        fetchPolicy: 'cache-first'\n      });\n    }\n\n    return this.queryManager.watchQuery(options);\n  };\n\n  ApolloClient.prototype.query = function (options) {\n    if (this.defaultOptions.query) {\n      options = __assign(__assign({}, this.defaultOptions.query), options);\n    }\n\n    process.env.NODE_ENV === \"production\" ? invariant(options.fetchPolicy !== 'cache-and-network', 2) : invariant(options.fetchPolicy !== 'cache-and-network', 'The cache-and-network fetchPolicy does not work with client.query, because ' + 'client.query can only return a single result. Please use client.watchQuery ' + 'to receive multiple results from the cache and the network, or consider ' + 'using a different fetchPolicy, such as cache-first or network-only.');\n\n    if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n      options = __assign(__assign({}, options), {\n        fetchPolicy: 'cache-first'\n      });\n    }\n\n    return this.queryManager.query(options);\n  };\n\n  ApolloClient.prototype.mutate = function (options) {\n    if (this.defaultOptions.mutate) {\n      options = __assign(__assign({}, this.defaultOptions.mutate), options);\n    }\n\n    return this.queryManager.mutate(options);\n  };\n\n  ApolloClient.prototype.subscribe = function (options) {\n    return this.queryManager.startGraphQLSubscription(options);\n  };\n\n  ApolloClient.prototype.readQuery = function (options, optimistic) {\n    if (optimistic === void 0) {\n      optimistic = false;\n    }\n\n    return this.cache.readQuery(options, optimistic);\n  };\n\n  ApolloClient.prototype.readFragment = function (options, optimistic) {\n    if (optimistic === void 0) {\n      optimistic = false;\n    }\n\n    return this.cache.readFragment(options, optimistic);\n  };\n\n  ApolloClient.prototype.writeQuery = function (options) {\n    this.cache.writeQuery(options);\n    this.queryManager.broadcastQueries();\n  };\n\n  ApolloClient.prototype.writeFragment = function (options) {\n    this.cache.writeFragment(options);\n    this.queryManager.broadcastQueries();\n  };\n\n  ApolloClient.prototype.__actionHookForDevTools = function (cb) {\n    this.devToolsHookCb = cb;\n  };\n\n  ApolloClient.prototype.__requestRaw = function (payload) {\n    return execute(this.link, payload);\n  };\n\n  ApolloClient.prototype.resetStore = function () {\n    var _this = this;\n\n    return Promise.resolve().then(function () {\n      return _this.queryManager.clearStore();\n    }).then(function () {\n      return Promise.all(_this.resetStoreCallbacks.map(function (fn) {\n        return fn();\n      }));\n    }).then(function () {\n      return _this.reFetchObservableQueries();\n    });\n  };\n\n  ApolloClient.prototype.clearStore = function () {\n    var _this = this;\n\n    return Promise.resolve().then(function () {\n      return _this.queryManager.clearStore();\n    }).then(function () {\n      return Promise.all(_this.clearStoreCallbacks.map(function (fn) {\n        return fn();\n      }));\n    });\n  };\n\n  ApolloClient.prototype.onResetStore = function (cb) {\n    var _this = this;\n\n    this.resetStoreCallbacks.push(cb);\n    return function () {\n      _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function (c) {\n        return c !== cb;\n      });\n    };\n  };\n\n  ApolloClient.prototype.onClearStore = function (cb) {\n    var _this = this;\n\n    this.clearStoreCallbacks.push(cb);\n    return function () {\n      _this.clearStoreCallbacks = _this.clearStoreCallbacks.filter(function (c) {\n        return c !== cb;\n      });\n    };\n  };\n\n  ApolloClient.prototype.reFetchObservableQueries = function (includeStandby) {\n    return this.queryManager.reFetchObservableQueries(includeStandby);\n  };\n\n  ApolloClient.prototype.extract = function (optimistic) {\n    return this.cache.extract(optimistic);\n  };\n\n  ApolloClient.prototype.restore = function (serializedState) {\n    return this.cache.restore(serializedState);\n  };\n\n  ApolloClient.prototype.addResolvers = function (resolvers) {\n    this.localState.addResolvers(resolvers);\n  };\n\n  ApolloClient.prototype.setResolvers = function (resolvers) {\n    this.localState.setResolvers(resolvers);\n  };\n\n  ApolloClient.prototype.getResolvers = function () {\n    return this.localState.getResolvers();\n  };\n\n  ApolloClient.prototype.setLocalStateFragmentMatcher = function (fragmentMatcher) {\n    this.localState.setFragmentMatcher(fragmentMatcher);\n  };\n\n  ApolloClient.prototype.setLink = function (newLink) {\n    this.link = this.queryManager.link = newLink;\n  };\n\n  return ApolloClient;\n}();\n\nexport { ApolloClient };","map":{"version":3,"sources":["ApolloClient.js"],"names":[],"mappings":";;;;;;;;AAQA,IAAI,oBAAoB,GAAG,KAA3B;;AACG,IAAC,YAAY,GAAI,YAAY;AAC5B,WAAS,YAAT,CAAsB,OAAtB,EAA+B;AAC3B,QAAI,KAAK,GAAG,IAAZ;;AACA,SAAK,cAAL,GAAsB,EAAtB;AACA,SAAK,mBAAL,GAA2B,EAA3B;AACA,SAAK,mBAAL,GAA2B,EAA3B;AACA,QAAI,GAAG,GAAG,OAAO,CAAC,GAAlB;AAAA,QAAuB,WAAW,GAAG,OAAO,CAAC,WAA7C;AAAA,QAA0D,OAAO,GAAG,OAAO,CAAC,OAA5E;AAAA,QAAqF,KAAK,GAAG,OAAO,CAAC,KAArG;AAAA,QAA4G,EAAE,GAAG,OAAO,CAAC,OAAzH;AAAA,QAAkI,OAAO,GAAG,EAAE,KAAK,KAAK,CAAZ,GAAgB,KAAhB,GAAwB,EAApK;AAAA,QAAwK,EAAE,GAAG,OAAO,CAAC,kBAArL;AAAA,QAAyM,kBAAkB,GAAG,EAAE,KAAK,KAAK,CAAZ,GAAgB,CAAhB,GAAoB,EAAlP;AAAA,QAAsP,iBAAiB,GAAG,OAAO,CAAC,iBAAlR;AAAA,QAAqS,EAAE,GAAG,OAAO,CAAC,kBAAlT;AAAA,QAAsU,kBAAkB,GAAG,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuB,EAAlX;AAAA,QAAsX,cAAc,GAAG,OAAO,CAAC,cAA/Y;AAAA,QAA+Z,EAAE,GAAG,OAAO,CAAC,sBAA5a;AAAA,QAAoc,sBAAsB,GAAG,EAAE,KAAK,KAAK,CAAZ,GAAgB,KAAhB,GAAwB,EAArf;AAAA,QAAyf,SAAS,GAAG,OAAO,CAAC,SAA7gB;AAAA,QAAwhB,QAAQ,GAAG,OAAO,CAAC,QAA3iB;AAAA,QAAqjB,eAAe,GAAG,OAAO,CAAC,eAA/kB;AAAA,QAAgmB,mBAAmB,GAAG,OAAO,CAAC,IAA9nB;AAAA,QAAooB,sBAAsB,GAAG,OAAO,CAAC,OAArqB;AACA,QAAI,IAAI,GAAG,OAAO,CAAC,IAAnB;;AACA,QAAI,CAAC,IAAL,EAAW;AACP,MAAA,IAAI,GAAG,GAAG,GACJ,IAAI,QAAJ,CAAa;AAAE,QAAA,GAAG,EAAE,GAAP;AAAY,QAAA,WAAW,EAAE,WAAzB;AAAsC,QAAA,OAAO,EAAE;AAA/C,OAAb,CADI,GAEJ,UAAU,CAAC,KAAX,EAFN;AAGH;;AACD,QAAI,CAAC,KAAL,EAAY;AACR,YAAM,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAAzB,GAAwC,IAAI,cAAJ,CAAmB,CAAnB,CAAxC,GAAgE,IAAI,cAAJ,CAAmB,sEACrF,2BADqF,GAErF,kEAFkE,CAAtE;AAGH;;AACD,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,qBAAL,GAA6B,OAAO,IAAI,kBAAkB,GAAG,CAA7D;AACA,SAAK,kBAAL,GAA0B,kBAA1B;AACA,SAAK,cAAL,GAAsB,cAAc,IAAI,EAAxC;AACA,SAAK,QAAL,GAAgB,QAAhB;;AACA,QAAI,kBAAJ,EAAwB;AACpB,MAAA,UAAU,CAAC,YAAY;AAAE,eAAQ,KAAK,CAAC,qBAAN,GAA8B,KAAtC;AAA+C,OAA9D,EAAgE,kBAAhE,CAAV;AACH;;AACD,SAAK,UAAL,GAAkB,KAAK,UAAL,CAAgB,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAK,KAAL,GAAa,KAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAK,MAAL,GAAc,KAAK,MAAL,CAAY,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAK,UAAL,GAAkB,KAAK,UAAL,CAAgB,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAK,wBAAL,GAAgC,KAAK,wBAAL,CAA8B,IAA9B,CAAmC,IAAnC,CAAhC;AACA,QAAI,wBAAwB,GAAG,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAAzB,IAC3B,OAAO,MAAP,KAAkB,WADS,IAE3B,CAAC,MAAM,CAAC,iBAFZ;;AAGA,QAAI,OAAO,iBAAP,KAA6B,WAA7B,GACE,wBADF,GAEE,iBAAiB,IAAI,OAAO,MAAP,KAAkB,WAF7C,EAE0D;AACtD,MAAA,MAAM,CAAC,iBAAP,GAA2B,IAA3B;AACH;;AACD,QAAI,CAAC,oBAAD,IAAyB,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAAtD,EAAoE;AAChE,MAAA,oBAAoB,GAAG,IAAvB;;AACA,UAAI,OAAO,MAAP,KAAkB,WAAlB,IACA,MAAM,CAAC,QADP,IAEA,MAAM,CAAC,GAAP,KAAe,MAAM,CAAC,IAF1B,EAEgC;AAC5B,YAAI,OAAO,MAAM,CAAC,+BAAd,KAAkD,WAAtD,EAAmE;AAC/D,cAAI,MAAM,CAAC,SAAP,IACA,MAAM,CAAC,SAAP,CAAiB,SADjB,IAEA,MAAM,CAAC,SAAP,CAAiB,SAAjB,CAA2B,OAA3B,CAAmC,QAAnC,IAA+C,CAAC,CAFpD,EAEuD;AACnD,YAAA,OAAO,CAAC,KAAR,CAAc,kCACV,uCADU,GAEV,sGAFJ;AAGH;AACJ;AACJ;AACJ;;AACD,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,UAAL,GAAkB,IAAI,UAAJ,CAAe;AAC7B,MAAA,KAAK,EAAE,KADsB;AAE7B,MAAA,MAAM,EAAE,IAFqB;AAG7B,MAAA,SAAS,EAAE,SAHkB;AAI7B,MAAA,eAAe,EAAE;AAJY,KAAf,CAAlB;AAMA,SAAK,YAAL,GAAoB,IAAI,YAAJ,CAAiB;AACjC,MAAA,KAAK,EAAE,KAAK,KADqB;AAEjC,MAAA,IAAI,EAAE,KAAK,IAFsB;AAGjC,MAAA,kBAAkB,EAAE,kBAHa;AAIjC,MAAA,OAAO,EAAE,OAJwB;AAKjC,MAAA,eAAe,EAAE;AACb,QAAA,IAAI,EAAE,mBADO;AAEb,QAAA,OAAO,EAAE;AAFI,OALgB;AASjC,MAAA,UAAU,EAAE,KAAK,UATgB;AAUjC,MAAA,sBAAsB,EAAE,sBAVS;AAWjC,MAAA,WAAW,EAAE,YAAY;AACrB,YAAI,KAAK,CAAC,cAAV,EAA0B;AACtB,UAAA,KAAK,CAAC,cAAN,CAAqB;AACjB,YAAA,MAAM,EAAE,EADS;AAEjB,YAAA,KAAK,EAAE;AACH,cAAA,OAAO,EAAE,KAAK,CAAC,YAAN,CAAmB,aAAnB,EADN;AAEH,cAAA,SAAS,EAAE,KAAK,CAAC,YAAN,CAAmB,aAAnB,CAAiC,QAAjC;AAFR,aAFU;AAMjB,YAAA,yBAAyB,EAAE,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAoB,IAApB;AANV,WAArB;AAQH;AACJ;AAtBgC,KAAjB,CAApB;AAwBH;;AACD,EAAA,YAAY,CAAC,SAAb,CAAuB,IAAvB,GAA8B,YAAY;AACtC,SAAK,YAAL,CAAkB,IAAlB;AACH,GAFD;;AAGA,EAAA,YAAY,CAAC,SAAb,CAAuB,UAAvB,GAAoC,UAAU,OAAV,EAAmB;AACnD,QAAI,KAAK,cAAL,CAAoB,UAAxB,EAAoC;AAChC,MAAA,OAAO,GAAG,QAAQ,CAAC,QAAQ,CAAC,EAAD,EAAK,KAAK,cAAL,CAAoB,UAAzB,CAAT,EAA+C,OAA/C,CAAlB;AACH;;AACD,QAAI,KAAK,qBAAL,KACC,OAAO,CAAC,WAAR,KAAwB,cAAxB,IACG,OAAO,CAAC,WAAR,KAAwB,mBAF5B,CAAJ,EAEsD;AAClD,MAAA,OAAO,GAAG,QAAQ,CAAC,QAAQ,CAAC,EAAD,EAAK,OAAL,CAAT,EAAwB;AAAE,QAAA,WAAW,EAAE;AAAf,OAAxB,CAAlB;AACH;;AACD,WAAO,KAAK,YAAL,CAAkB,UAAlB,CAA6B,OAA7B,CAAP;AACH,GAVD;;AAWA,EAAA,YAAY,CAAC,SAAb,CAAuB,KAAvB,GAA+B,UAAU,OAAV,EAAmB;AAC9C,QAAI,KAAK,cAAL,CAAoB,KAAxB,EAA+B;AAC3B,MAAA,OAAO,GAAG,QAAQ,CAAC,QAAQ,CAAC,EAAD,EAAK,KAAK,cAAL,CAAoB,KAAzB,CAAT,EAA0C,OAA1C,CAAlB;AACH;;AACD,IAAA,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAAzB,GAAwC,SAAS,CAAC,OAAO,CAAC,WAAR,KAAwB,mBAAzB,EAA8C,CAA9C,CAAjD,GAAoG,SAAS,CAAC,OAAO,CAAC,WAAR,KAAwB,mBAAzB,EAA8C,gFACvJ,6EADuJ,GAEvJ,0EAFuJ,GAGvJ,qEAHyG,CAA7G;;AAIA,QAAI,KAAK,qBAAL,IAA8B,OAAO,CAAC,WAAR,KAAwB,cAA1D,EAA0E;AACtE,MAAA,OAAO,GAAG,QAAQ,CAAC,QAAQ,CAAC,EAAD,EAAK,OAAL,CAAT,EAAwB;AAAE,QAAA,WAAW,EAAE;AAAf,OAAxB,CAAlB;AACH;;AACD,WAAO,KAAK,YAAL,CAAkB,KAAlB,CAAwB,OAAxB,CAAP;AACH,GAZD;;AAaA,EAAA,YAAY,CAAC,SAAb,CAAuB,MAAvB,GAAgC,UAAU,OAAV,EAAmB;AAC/C,QAAI,KAAK,cAAL,CAAoB,MAAxB,EAAgC;AAC5B,MAAA,OAAO,GAAG,QAAQ,CAAC,QAAQ,CAAC,EAAD,EAAK,KAAK,cAAL,CAAoB,MAAzB,CAAT,EAA2C,OAA3C,CAAlB;AACH;;AACD,WAAO,KAAK,YAAL,CAAkB,MAAlB,CAAyB,OAAzB,CAAP;AACH,GALD;;AAMA,EAAA,YAAY,CAAC,SAAb,CAAuB,SAAvB,GAAmC,UAAU,OAAV,EAAmB;AAClD,WAAO,KAAK,YAAL,CAAkB,wBAAlB,CAA2C,OAA3C,CAAP;AACH,GAFD;;AAGA,EAAA,YAAY,CAAC,SAAb,CAAuB,SAAvB,GAAmC,UAAU,OAAV,EAAmB,UAAnB,EAA+B;AAC9D,QAAI,UAAU,KAAK,KAAK,CAAxB,EAA2B;AAAE,MAAA,UAAU,GAAG,KAAb;AAAqB;;AAClD,WAAO,KAAK,KAAL,CAAW,SAAX,CAAqB,OAArB,EAA8B,UAA9B,CAAP;AACH,GAHD;;AAIA,EAAA,YAAY,CAAC,SAAb,CAAuB,YAAvB,GAAsC,UAAU,OAAV,EAAmB,UAAnB,EAA+B;AACjE,QAAI,UAAU,KAAK,KAAK,CAAxB,EAA2B;AAAE,MAAA,UAAU,GAAG,KAAb;AAAqB;;AAClD,WAAO,KAAK,KAAL,CAAW,YAAX,CAAwB,OAAxB,EAAiC,UAAjC,CAAP;AACH,GAHD;;AAIA,EAAA,YAAY,CAAC,SAAb,CAAuB,UAAvB,GAAoC,UAAU,OAAV,EAAmB;AACnD,SAAK,KAAL,CAAW,UAAX,CAAsB,OAAtB;AACA,SAAK,YAAL,CAAkB,gBAAlB;AACH,GAHD;;AAIA,EAAA,YAAY,CAAC,SAAb,CAAuB,aAAvB,GAAuC,UAAU,OAAV,EAAmB;AACtD,SAAK,KAAL,CAAW,aAAX,CAAyB,OAAzB;AACA,SAAK,YAAL,CAAkB,gBAAlB;AACH,GAHD;;AAIA,EAAA,YAAY,CAAC,SAAb,CAAuB,uBAAvB,GAAiD,UAAU,EAAV,EAAc;AAC3D,SAAK,cAAL,GAAsB,EAAtB;AACH,GAFD;;AAGA,EAAA,YAAY,CAAC,SAAb,CAAuB,YAAvB,GAAsC,UAAU,OAAV,EAAmB;AACrD,WAAO,OAAO,CAAC,KAAK,IAAN,EAAY,OAAZ,CAAd;AACH,GAFD;;AAGA,EAAA,YAAY,CAAC,SAAb,CAAuB,UAAvB,GAAoC,YAAY;AAC5C,QAAI,KAAK,GAAG,IAAZ;;AACA,WAAO,OAAO,CAAC,OAAR,GACF,IADE,CACG,YAAY;AAAE,aAAO,KAAK,CAAC,YAAN,CAAmB,UAAnB,EAAP;AAAyC,KAD1D,EAEF,IAFE,CAEG,YAAY;AAAE,aAAO,OAAO,CAAC,GAAR,CAAY,KAAK,CAAC,mBAAN,CAA0B,GAA1B,CAA8B,UAAU,EAAV,EAAc;AAAE,eAAO,EAAE,EAAT;AAAc,OAA5D,CAAZ,CAAP;AAAoF,KAFrG,EAGF,IAHE,CAGG,YAAY;AAAE,aAAO,KAAK,CAAC,wBAAN,EAAP;AAA0C,KAH3D,CAAP;AAIH,GAND;;AAOA,EAAA,YAAY,CAAC,SAAb,CAAuB,UAAvB,GAAoC,YAAY;AAC5C,QAAI,KAAK,GAAG,IAAZ;;AACA,WAAO,OAAO,CAAC,OAAR,GACF,IADE,CACG,YAAY;AAAE,aAAO,KAAK,CAAC,YAAN,CAAmB,UAAnB,EAAP;AAAyC,KAD1D,EAEF,IAFE,CAEG,YAAY;AAAE,aAAO,OAAO,CAAC,GAAR,CAAY,KAAK,CAAC,mBAAN,CAA0B,GAA1B,CAA8B,UAAU,EAAV,EAAc;AAAE,eAAO,EAAE,EAAT;AAAc,OAA5D,CAAZ,CAAP;AAAoF,KAFrG,CAAP;AAGH,GALD;;AAMA,EAAA,YAAY,CAAC,SAAb,CAAuB,YAAvB,GAAsC,UAAU,EAAV,EAAc;AAChD,QAAI,KAAK,GAAG,IAAZ;;AACA,SAAK,mBAAL,CAAyB,IAAzB,CAA8B,EAA9B;AACA,WAAO,YAAY;AACf,MAAA,KAAK,CAAC,mBAAN,GAA4B,KAAK,CAAC,mBAAN,CAA0B,MAA1B,CAAiC,UAAU,CAAV,EAAa;AAAE,eAAO,CAAC,KAAK,EAAb;AAAkB,OAAlE,CAA5B;AACH,KAFD;AAGH,GAND;;AAOA,EAAA,YAAY,CAAC,SAAb,CAAuB,YAAvB,GAAsC,UAAU,EAAV,EAAc;AAChD,QAAI,KAAK,GAAG,IAAZ;;AACA,SAAK,mBAAL,CAAyB,IAAzB,CAA8B,EAA9B;AACA,WAAO,YAAY;AACf,MAAA,KAAK,CAAC,mBAAN,GAA4B,KAAK,CAAC,mBAAN,CAA0B,MAA1B,CAAiC,UAAU,CAAV,EAAa;AAAE,eAAO,CAAC,KAAK,EAAb;AAAkB,OAAlE,CAA5B;AACH,KAFD;AAGH,GAND;;AAOA,EAAA,YAAY,CAAC,SAAb,CAAuB,wBAAvB,GAAkD,UAAU,cAAV,EAA0B;AACxE,WAAO,KAAK,YAAL,CAAkB,wBAAlB,CAA2C,cAA3C,CAAP;AACH,GAFD;;AAGA,EAAA,YAAY,CAAC,SAAb,CAAuB,OAAvB,GAAiC,UAAU,UAAV,EAAsB;AACnD,WAAO,KAAK,KAAL,CAAW,OAAX,CAAmB,UAAnB,CAAP;AACH,GAFD;;AAGA,EAAA,YAAY,CAAC,SAAb,CAAuB,OAAvB,GAAiC,UAAU,eAAV,EAA2B;AACxD,WAAO,KAAK,KAAL,CAAW,OAAX,CAAmB,eAAnB,CAAP;AACH,GAFD;;AAGA,EAAA,YAAY,CAAC,SAAb,CAAuB,YAAvB,GAAsC,UAAU,SAAV,EAAqB;AACvD,SAAK,UAAL,CAAgB,YAAhB,CAA6B,SAA7B;AACH,GAFD;;AAGA,EAAA,YAAY,CAAC,SAAb,CAAuB,YAAvB,GAAsC,UAAU,SAAV,EAAqB;AACvD,SAAK,UAAL,CAAgB,YAAhB,CAA6B,SAA7B;AACH,GAFD;;AAGA,EAAA,YAAY,CAAC,SAAb,CAAuB,YAAvB,GAAsC,YAAY;AAC9C,WAAO,KAAK,UAAL,CAAgB,YAAhB,EAAP;AACH,GAFD;;AAGA,EAAA,YAAY,CAAC,SAAb,CAAuB,4BAAvB,GAAsD,UAAU,eAAV,EAA2B;AAC7E,SAAK,UAAL,CAAgB,kBAAhB,CAAmC,eAAnC;AACH,GAFD;;AAGA,EAAA,YAAY,CAAC,SAAb,CAAuB,OAAvB,GAAiC,UAAU,OAAV,EAAmB;AAChD,SAAK,IAAL,GAAY,KAAK,YAAL,CAAkB,IAAlB,GAAyB,OAArC;AACH,GAFD;;AAGA,SAAO,YAAP;AACH,CAtMmB,EAAjB","sourcesContent":["import { __assign } from \"tslib\";\nimport { invariant, InvariantError } from 'ts-invariant';\nimport { ApolloLink } from './link/core/ApolloLink';\nimport { execute } from './link/core/execute';\nimport { QueryManager } from './core/QueryManager';\nimport { LocalState } from './core/LocalState';\nimport { version } from './version';\nimport { HttpLink } from './link/http/HttpLink';\nvar hasSuggestedDevtools = false;\nvar ApolloClient = (function () {\n    function ApolloClient(options) {\n        var _this = this;\n        this.defaultOptions = {};\n        this.resetStoreCallbacks = [];\n        this.clearStoreCallbacks = [];\n        var uri = options.uri, credentials = options.credentials, headers = options.headers, cache = options.cache, _a = options.ssrMode, ssrMode = _a === void 0 ? false : _a, _b = options.ssrForceFetchDelay, ssrForceFetchDelay = _b === void 0 ? 0 : _b, connectToDevTools = options.connectToDevTools, _c = options.queryDeduplication, queryDeduplication = _c === void 0 ? true : _c, defaultOptions = options.defaultOptions, _d = options.assumeImmutableResults, assumeImmutableResults = _d === void 0 ? false : _d, resolvers = options.resolvers, typeDefs = options.typeDefs, fragmentMatcher = options.fragmentMatcher, clientAwarenessName = options.name, clientAwarenessVersion = options.version;\n        var link = options.link;\n        if (!link) {\n            link = uri\n                ? new HttpLink({ uri: uri, credentials: credentials, headers: headers })\n                : ApolloLink.empty();\n        }\n        if (!cache) {\n            throw new InvariantError(\"To initialize Apollo Client, you must specify a 'cache' property \" +\n                \"in the options object. \\n\" +\n                \"For more information, please visit: https://go.apollo.dev/c/docs\");\n        }\n        this.link = link;\n        this.cache = cache;\n        this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n        this.queryDeduplication = queryDeduplication;\n        this.defaultOptions = defaultOptions || {};\n        this.typeDefs = typeDefs;\n        if (ssrForceFetchDelay) {\n            setTimeout(function () { return (_this.disableNetworkFetches = false); }, ssrForceFetchDelay);\n        }\n        this.watchQuery = this.watchQuery.bind(this);\n        this.query = this.query.bind(this);\n        this.mutate = this.mutate.bind(this);\n        this.resetStore = this.resetStore.bind(this);\n        this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n        var defaultConnectToDevTools = process.env.NODE_ENV !== 'production' &&\n            typeof window !== 'undefined' &&\n            !window.__APOLLO_CLIENT__;\n        if (typeof connectToDevTools === 'undefined'\n            ? defaultConnectToDevTools\n            : connectToDevTools && typeof window !== 'undefined') {\n            window.__APOLLO_CLIENT__ = this;\n        }\n        if (!hasSuggestedDevtools && process.env.NODE_ENV !== 'production') {\n            hasSuggestedDevtools = true;\n            if (typeof window !== 'undefined' &&\n                window.document &&\n                window.top === window.self) {\n                if (typeof window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n                    if (window.navigator &&\n                        window.navigator.userAgent &&\n                        window.navigator.userAgent.indexOf('Chrome') > -1) {\n                        console.debug('Download the Apollo DevTools ' +\n                            'for a better development experience: ' +\n                            'https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm');\n                    }\n                }\n            }\n        }\n        this.version = version;\n        this.localState = new LocalState({\n            cache: cache,\n            client: this,\n            resolvers: resolvers,\n            fragmentMatcher: fragmentMatcher,\n        });\n        this.queryManager = new QueryManager({\n            cache: this.cache,\n            link: this.link,\n            queryDeduplication: queryDeduplication,\n            ssrMode: ssrMode,\n            clientAwareness: {\n                name: clientAwarenessName,\n                version: clientAwarenessVersion,\n            },\n            localState: this.localState,\n            assumeImmutableResults: assumeImmutableResults,\n            onBroadcast: function () {\n                if (_this.devToolsHookCb) {\n                    _this.devToolsHookCb({\n                        action: {},\n                        state: {\n                            queries: _this.queryManager.getQueryStore(),\n                            mutations: _this.queryManager.mutationStore.getStore(),\n                        },\n                        dataWithOptimisticResults: _this.cache.extract(true),\n                    });\n                }\n            },\n        });\n    }\n    ApolloClient.prototype.stop = function () {\n        this.queryManager.stop();\n    };\n    ApolloClient.prototype.watchQuery = function (options) {\n        if (this.defaultOptions.watchQuery) {\n            options = __assign(__assign({}, this.defaultOptions.watchQuery), options);\n        }\n        if (this.disableNetworkFetches &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options = __assign(__assign({}, options), { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.watchQuery(options);\n    };\n    ApolloClient.prototype.query = function (options) {\n        if (this.defaultOptions.query) {\n            options = __assign(__assign({}, this.defaultOptions.query), options);\n        }\n        invariant(options.fetchPolicy !== 'cache-and-network', 'The cache-and-network fetchPolicy does not work with client.query, because ' +\n            'client.query can only return a single result. Please use client.watchQuery ' +\n            'to receive multiple results from the cache and the network, or consider ' +\n            'using a different fetchPolicy, such as cache-first or network-only.');\n        if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n            options = __assign(__assign({}, options), { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.query(options);\n    };\n    ApolloClient.prototype.mutate = function (options) {\n        if (this.defaultOptions.mutate) {\n            options = __assign(__assign({}, this.defaultOptions.mutate), options);\n        }\n        return this.queryManager.mutate(options);\n    };\n    ApolloClient.prototype.subscribe = function (options) {\n        return this.queryManager.startGraphQLSubscription(options);\n    };\n    ApolloClient.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.cache.readQuery(options, optimistic);\n    };\n    ApolloClient.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.cache.readFragment(options, optimistic);\n    };\n    ApolloClient.prototype.writeQuery = function (options) {\n        this.cache.writeQuery(options);\n        this.queryManager.broadcastQueries();\n    };\n    ApolloClient.prototype.writeFragment = function (options) {\n        this.cache.writeFragment(options);\n        this.queryManager.broadcastQueries();\n    };\n    ApolloClient.prototype.__actionHookForDevTools = function (cb) {\n        this.devToolsHookCb = cb;\n    };\n    ApolloClient.prototype.__requestRaw = function (payload) {\n        return execute(this.link, payload);\n    };\n    ApolloClient.prototype.resetStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () { return _this.queryManager.clearStore(); })\n            .then(function () { return Promise.all(_this.resetStoreCallbacks.map(function (fn) { return fn(); })); })\n            .then(function () { return _this.reFetchObservableQueries(); });\n    };\n    ApolloClient.prototype.clearStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () { return _this.queryManager.clearStore(); })\n            .then(function () { return Promise.all(_this.clearStoreCallbacks.map(function (fn) { return fn(); })); });\n    };\n    ApolloClient.prototype.onResetStore = function (cb) {\n        var _this = this;\n        this.resetStoreCallbacks.push(cb);\n        return function () {\n            _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    ApolloClient.prototype.onClearStore = function (cb) {\n        var _this = this;\n        this.clearStoreCallbacks.push(cb);\n        return function () {\n            _this.clearStoreCallbacks = _this.clearStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    ApolloClient.prototype.reFetchObservableQueries = function (includeStandby) {\n        return this.queryManager.reFetchObservableQueries(includeStandby);\n    };\n    ApolloClient.prototype.extract = function (optimistic) {\n        return this.cache.extract(optimistic);\n    };\n    ApolloClient.prototype.restore = function (serializedState) {\n        return this.cache.restore(serializedState);\n    };\n    ApolloClient.prototype.addResolvers = function (resolvers) {\n        this.localState.addResolvers(resolvers);\n    };\n    ApolloClient.prototype.setResolvers = function (resolvers) {\n        this.localState.setResolvers(resolvers);\n    };\n    ApolloClient.prototype.getResolvers = function () {\n        return this.localState.getResolvers();\n    };\n    ApolloClient.prototype.setLocalStateFragmentMatcher = function (fragmentMatcher) {\n        this.localState.setFragmentMatcher(fragmentMatcher);\n    };\n    ApolloClient.prototype.setLink = function (newLink) {\n        this.link = this.queryManager.link = newLink;\n    };\n    return ApolloClient;\n}());\nexport { ApolloClient };\n//# sourceMappingURL=ApolloClient.js.map"]},"metadata":{},"sourceType":"module"}