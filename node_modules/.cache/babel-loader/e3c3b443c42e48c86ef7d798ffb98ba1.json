{"ast":null,"code":"import { __assign } from 'tslib';\nimport { useContext, useState, useRef, useEffect } from 'react';\nimport { getApolloContext } from '../context/ApolloContext.js';\nimport { SubscriptionData } from '../data/SubscriptionData.js';\n\nfunction useSubscription(subscription, options) {\n  var context = useContext(getApolloContext());\n  var updatedOptions = options ? __assign(__assign({}, options), {\n    subscription: subscription\n  }) : {\n    subscription: subscription\n  };\n\n  var _a = useState({\n    loading: !updatedOptions.skip,\n    error: undefined,\n    data: undefined\n  }),\n      result = _a[0],\n      setResult = _a[1];\n\n  var subscriptionDataRef = useRef();\n\n  function getSubscriptionDataRef() {\n    if (!subscriptionDataRef.current) {\n      subscriptionDataRef.current = new SubscriptionData({\n        options: updatedOptions,\n        context: context,\n        setResult: setResult\n      });\n    }\n\n    return subscriptionDataRef.current;\n  }\n\n  var subscriptionData = getSubscriptionDataRef();\n  subscriptionData.setOptions(updatedOptions, true);\n  subscriptionData.context = context;\n  useEffect(function () {\n    return subscriptionData.afterExecute();\n  });\n  useEffect(function () {\n    return subscriptionData.cleanup.bind(subscriptionData);\n  }, []);\n  return subscriptionData.execute(result);\n}\n\nexport { useSubscription };","map":{"version":3,"sources":["useSubscription.js"],"names":[],"mappings":";;;;;AAIO,SAAS,eAAT,CAAyB,YAAzB,EAAuC,OAAvC,EAAgD;AACnD,MAAI,OAAO,GAAG,UAAU,CAAC,gBAAgB,EAAjB,CAAxB;AACA,MAAI,cAAc,GAAG,OAAO,GACtB,QAAQ,CAAC,QAAQ,CAAC,EAAD,EAAK,OAAL,CAAT,EAAwB;AAAE,IAAA,YAAY,EAAE;AAAhB,GAAxB,CADc,GAC4C;AAAE,IAAA,YAAY,EAAE;AAAhB,GADxE;;AAEA,MAAI,EAAE,GAAG,QAAQ,CAAC;AACd,IAAA,OAAO,EAAE,CAAC,cAAc,CAAC,IADX;AAEd,IAAA,KAAK,EAAE,SAFO;AAGd,IAAA,IAAI,EAAE;AAHQ,GAAD,CAAjB;AAAA,MAII,MAAM,GAAG,EAAE,CAAC,CAAD,CAJf;AAAA,MAIoB,SAAS,GAAG,EAAE,CAAC,CAAD,CAJlC;;AAKA,MAAI,mBAAmB,GAAG,MAAM,EAAhC;;AACA,WAAS,sBAAT,GAAkC;AAC9B,QAAI,CAAC,mBAAmB,CAAC,OAAzB,EAAkC;AAC9B,MAAA,mBAAmB,CAAC,OAApB,GAA8B,IAAI,gBAAJ,CAAqB;AAC/C,QAAA,OAAO,EAAE,cADsC;AAE/C,QAAA,OAAO,EAAE,OAFsC;AAG/C,QAAA,SAAS,EAAE;AAHoC,OAArB,CAA9B;AAKH;;AACD,WAAO,mBAAmB,CAAC,OAA3B;AACH;;AACD,MAAI,gBAAgB,GAAG,sBAAsB,EAA7C;AACA,EAAA,gBAAgB,CAAC,UAAjB,CAA4B,cAA5B,EAA4C,IAA5C;AACA,EAAA,gBAAgB,CAAC,OAAjB,GAA2B,OAA3B;AACA,EAAA,SAAS,CAAC,YAAY;AAAE,WAAO,gBAAgB,CAAC,YAAjB,EAAP;AAAyC,GAAxD,CAAT;AACA,EAAA,SAAS,CAAC,YAAY;AAAE,WAAO,gBAAgB,CAAC,OAAjB,CAAyB,IAAzB,CAA8B,gBAA9B,CAAP;AAAyD,GAAxE,EAA0E,EAA1E,CAAT;AACA,SAAO,gBAAgB,CAAC,OAAjB,CAAyB,MAAzB,CAAP;AACJ","sourcesContent":["import { __assign } from \"tslib\";\nimport { useContext, useState, useRef, useEffect } from 'react';\nimport { SubscriptionData } from '../data/SubscriptionData';\nimport { getApolloContext } from '../context/ApolloContext';\nexport function useSubscription(subscription, options) {\n    var context = useContext(getApolloContext());\n    var updatedOptions = options\n        ? __assign(__assign({}, options), { subscription: subscription }) : { subscription: subscription };\n    var _a = useState({\n        loading: !updatedOptions.skip,\n        error: undefined,\n        data: undefined\n    }), result = _a[0], setResult = _a[1];\n    var subscriptionDataRef = useRef();\n    function getSubscriptionDataRef() {\n        if (!subscriptionDataRef.current) {\n            subscriptionDataRef.current = new SubscriptionData({\n                options: updatedOptions,\n                context: context,\n                setResult: setResult\n            });\n        }\n        return subscriptionDataRef.current;\n    }\n    var subscriptionData = getSubscriptionDataRef();\n    subscriptionData.setOptions(updatedOptions, true);\n    subscriptionData.context = context;\n    useEffect(function () { return subscriptionData.afterExecute(); });\n    useEffect(function () { return subscriptionData.cleanup.bind(subscriptionData); }, []);\n    return subscriptionData.execute(result);\n}\n//# sourceMappingURL=useSubscription.js.map"]},"metadata":{},"sourceType":"module"}