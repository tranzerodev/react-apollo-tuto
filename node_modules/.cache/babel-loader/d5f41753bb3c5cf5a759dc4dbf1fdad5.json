{"ast":null,"code":"export { default as Observable } from 'zen-observable';\nexport { isReference, makeReference } from './utilities/graphql/storeUtils.js';\nexport { ApolloLink } from './link/core/ApolloLink.js';\nexport { execute } from './link/core/execute.js';\nexport { ApolloError, isApolloError } from './errors/ApolloError.js';\nexport { NetworkStatus } from './core/networkStatus.js';\nexport { ObservableQuery } from './core/ObservableQuery.js';\nexport { serializeFetchParameter } from './link/http/serializeFetchParameter.js';\nexport { selectURI } from './link/http/selectURI.js';\nexport { throwServerError } from './link/utils/throwServerError.js';\nexport { parseAndCheckHttpResponse } from './link/http/parseAndCheckHttpResponse.js';\nexport { checkFetcher } from './link/http/checkFetcher.js';\nexport { fallbackHttpConfig, selectHttpOptionsAndBody } from './link/http/selectHttpOptionsAndBody.js';\nexport { createSignalIfSupported } from './link/http/createSignalIfSupported.js';\nexport { fromError } from './link/utils/fromError.js';\nexport { createHttpLink } from './link/http/createHttpLink.js';\nexport { HttpLink } from './link/http/HttpLink.js';\nexport { ApolloClient } from './ApolloClient.js';\nexport { ApolloCache } from './cache/core/cache.js';\nexport { Cache } from './cache/core/types/Cache.js';\nexport { MissingFieldError } from './cache/core/types/common.js';\nexport { defaultDataIdFromObject } from './cache/inmemory/policies.js';\nexport { InMemoryCache } from './cache/inmemory/inMemoryCache.js';\nexport { empty } from './link/core/empty.js';\nexport { from } from './link/core/from.js';\nexport { split } from './link/core/split.js';\nexport { concat } from './link/core/concat.js';\nexport { toPromise } from './link/utils/toPromise.js';\nexport { fromPromise } from './link/utils/fromPromise.js';\nexport { default as gql } from 'graphql-tag';\nexport { disableExperimentalFragmentVariables, disableFragmentWarnings, enableExperimentalFragmentVariables, resetCaches } from './core/index.js';\nexport { getApolloContext, resetApolloContext } from './react/context/ApolloContext.js';\nexport { ApolloProvider } from './react/context/ApolloProvider.js';\nexport { ApolloConsumer } from './react/context/ApolloConsumer.js';\nexport { DocumentType, operationName, parser } from './react/parser/parser.js';\nexport { useQuery } from './react/hooks/useQuery.js';\nexport { useLazyQuery } from './react/hooks/useLazyQuery.js';\nexport { useMutation } from './react/hooks/useMutation.js';\nexport { useSubscription } from './react/hooks/useSubscription.js';\nexport { useApolloClient } from './react/hooks/useApolloClient.js';\nexport { RenderPromises } from './react/ssr/RenderPromises.js';","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["export { default as Observable } from 'zen-observable';\nexport { isReference, makeReference } from './utilities/graphql/storeUtils.js';\nexport { ApolloLink } from './link/core/ApolloLink.js';\nexport { execute } from './link/core/execute.js';\nexport { ApolloError, isApolloError } from './errors/ApolloError.js';\nexport { NetworkStatus } from './core/networkStatus.js';\nexport { ObservableQuery } from './core/ObservableQuery.js';\nexport { serializeFetchParameter } from './link/http/serializeFetchParameter.js';\nexport { selectURI } from './link/http/selectURI.js';\nexport { throwServerError } from './link/utils/throwServerError.js';\nexport { parseAndCheckHttpResponse } from './link/http/parseAndCheckHttpResponse.js';\nexport { checkFetcher } from './link/http/checkFetcher.js';\nexport { fallbackHttpConfig, selectHttpOptionsAndBody } from './link/http/selectHttpOptionsAndBody.js';\nexport { createSignalIfSupported } from './link/http/createSignalIfSupported.js';\nexport { fromError } from './link/utils/fromError.js';\nexport { createHttpLink } from './link/http/createHttpLink.js';\nexport { HttpLink } from './link/http/HttpLink.js';\nexport { ApolloClient } from './ApolloClient.js';\nexport { ApolloCache } from './cache/core/cache.js';\nexport { Cache } from './cache/core/types/Cache.js';\nexport { MissingFieldError } from './cache/core/types/common.js';\nexport { defaultDataIdFromObject } from './cache/inmemory/policies.js';\nexport { InMemoryCache } from './cache/inmemory/inMemoryCache.js';\nexport { empty } from './link/core/empty.js';\nexport { from } from './link/core/from.js';\nexport { split } from './link/core/split.js';\nexport { concat } from './link/core/concat.js';\nexport { toPromise } from './link/utils/toPromise.js';\nexport { fromPromise } from './link/utils/fromPromise.js';\nexport { default as gql } from 'graphql-tag';\nexport { disableExperimentalFragmentVariables, disableFragmentWarnings, enableExperimentalFragmentVariables, resetCaches } from './core/index.js';\nexport { getApolloContext, resetApolloContext } from './react/context/ApolloContext.js';\nexport { ApolloProvider } from './react/context/ApolloProvider.js';\nexport { ApolloConsumer } from './react/context/ApolloConsumer.js';\nexport { DocumentType, operationName, parser } from './react/parser/parser.js';\nexport { useQuery } from './react/hooks/useQuery.js';\nexport { useLazyQuery } from './react/hooks/useLazyQuery.js';\nexport { useMutation } from './react/hooks/useMutation.js';\nexport { useSubscription } from './react/hooks/useSubscription.js';\nexport { useApolloClient } from './react/hooks/useApolloClient.js';\nexport { RenderPromises } from './react/ssr/RenderPromises.js';\n//# sourceMappingURL=index.js.map\n"]},"metadata":{},"sourceType":"module"}