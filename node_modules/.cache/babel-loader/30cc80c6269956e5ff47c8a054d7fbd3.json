{"ast":null,"code":"import { invariant } from 'ts-invariant';\nimport React from 'react';\nimport { getApolloContext } from './ApolloContext.js';\n\nvar ApolloProvider = function (_a) {\n  var client = _a.client,\n      children = _a.children;\n  var ApolloContext = getApolloContext();\n  return React.createElement(ApolloContext.Consumer, null, function (context) {\n    if (context === void 0) {\n      context = {};\n    }\n\n    if (client && context.client !== client) {\n      context = Object.assign({}, context, {\n        client: client\n      });\n    }\n\n    process.env.NODE_ENV === \"production\" ? invariant(context.client, 7) : invariant(context.client, 'ApolloProvider was not passed a client instance. Make ' + 'sure you pass in your client via the \"client\" prop.');\n    return React.createElement(ApolloContext.Provider, {\n      value: context\n    }, children);\n  });\n};\n\nexport { ApolloProvider };","map":{"version":3,"sources":["ApolloProvider.js"],"names":[],"mappings":";;;;AAGU,IAAC,cAAc,GAAG,UAAU,EAAV,EAAc;AACtC,MAAI,MAAM,GAAG,EAAE,CAAC,MAAhB;AAAA,MAAwB,QAAQ,GAAG,EAAE,CAAC,QAAtC;AACA,MAAI,aAAa,GAAG,gBAAgB,EAApC;AACA,SAAO,KAAK,CAAC,aAAN,CAAoB,aAAa,CAAC,QAAlC,EAA4C,IAA5C,EAAkD,UAAU,OAAV,EAAmB;AACxE,QAAI,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAE,MAAA,OAAO,GAAG,EAAV;AAAe;;AACzC,QAAI,MAAM,IAAI,OAAO,CAAC,MAAR,KAAmB,MAAjC,EAAyC;AACrC,MAAA,OAAO,GAAG,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,OAAlB,EAA2B;AAAE,QAAA,MAAM,EAAE;AAAV,OAA3B,CAAV;AACH;;AACD,IAAA,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAAzB,GAAwC,SAAS,CAAC,OAAO,CAAC,MAAT,EAAiB,CAAjB,CAAjD,GAAuE,SAAS,CAAC,OAAO,CAAC,MAAT,EAAiB,2DAC7F,qDAD4E,CAAhF;AAEA,WAAQ,KAAK,CAAC,aAAN,CAAoB,aAAa,CAAC,QAAlC,EAA4C;AAAE,MAAA,KAAK,EAAE;AAAT,KAA5C,EAAgE,QAAhE,CAAR;AACH,GARM,CAAP;AASJ,CAZU","sourcesContent":["import React from 'react';\nimport { invariant } from 'ts-invariant';\nimport { getApolloContext } from './ApolloContext';\nexport var ApolloProvider = function (_a) {\n    var client = _a.client, children = _a.children;\n    var ApolloContext = getApolloContext();\n    return (React.createElement(ApolloContext.Consumer, null, function (context) {\n        if (context === void 0) { context = {}; }\n        if (client && context.client !== client) {\n            context = Object.assign({}, context, { client: client });\n        }\n        invariant(context.client, 'ApolloProvider was not passed a client instance. Make ' +\n            'sure you pass in your client via the \"client\" prop.');\n        return (React.createElement(ApolloContext.Provider, { value: context }, children));\n    }));\n};\n//# sourceMappingURL=ApolloProvider.js.map"]},"metadata":{},"sourceType":"module"}