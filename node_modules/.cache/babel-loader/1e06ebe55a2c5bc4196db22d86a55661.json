{"ast":null,"code":"import { __assign } from 'tslib';\nimport { useContext, useState, useRef, useEffect } from 'react';\nimport { getApolloContext } from '../context/ApolloContext.js';\nimport { MutationData } from '../data/MutationData.js';\n\nfunction useMutation(mutation, options) {\n  var context = useContext(getApolloContext());\n\n  var _a = useState({\n    called: false,\n    loading: false\n  }),\n      result = _a[0],\n      setResult = _a[1];\n\n  var updatedOptions = options ? __assign(__assign({}, options), {\n    mutation: mutation\n  }) : {\n    mutation: mutation\n  };\n  var mutationDataRef = useRef();\n\n  function getMutationDataRef() {\n    if (!mutationDataRef.current) {\n      mutationDataRef.current = new MutationData({\n        options: updatedOptions,\n        context: context,\n        result: result,\n        setResult: setResult\n      });\n    }\n\n    return mutationDataRef.current;\n  }\n\n  var mutationData = getMutationDataRef();\n  mutationData.setOptions(updatedOptions);\n  mutationData.context = context;\n  useEffect(function () {\n    return mutationData.afterExecute();\n  });\n  return mutationData.execute(result);\n}\n\nexport { useMutation };","map":{"version":3,"sources":["useMutation.js"],"names":[],"mappings":";;;;;AAIO,SAAS,WAAT,CAAqB,QAArB,EAA+B,OAA/B,EAAwC;AAC3C,MAAI,OAAO,GAAG,UAAU,CAAC,gBAAgB,EAAjB,CAAxB;;AACA,MAAI,EAAE,GAAG,QAAQ,CAAC;AAAE,IAAA,MAAM,EAAE,KAAV;AAAiB,IAAA,OAAO,EAAE;AAA1B,GAAD,CAAjB;AAAA,MAAsD,MAAM,GAAG,EAAE,CAAC,CAAD,CAAjE;AAAA,MAAsE,SAAS,GAAG,EAAE,CAAC,CAAD,CAApF;;AACA,MAAI,cAAc,GAAG,OAAO,GAAG,QAAQ,CAAC,QAAQ,CAAC,EAAD,EAAK,OAAL,CAAT,EAAwB;AAAE,IAAA,QAAQ,EAAE;AAAZ,GAAxB,CAAX,GAA6D;AAAE,IAAA,QAAQ,EAAE;AAAZ,GAAzF;AACA,MAAI,eAAe,GAAG,MAAM,EAA5B;;AACA,WAAS,kBAAT,GAA8B;AAC1B,QAAI,CAAC,eAAe,CAAC,OAArB,EAA8B;AAC1B,MAAA,eAAe,CAAC,OAAhB,GAA0B,IAAI,YAAJ,CAAiB;AACvC,QAAA,OAAO,EAAE,cAD8B;AAEvC,QAAA,OAAO,EAAE,OAF8B;AAGvC,QAAA,MAAM,EAAE,MAH+B;AAIvC,QAAA,SAAS,EAAE;AAJ4B,OAAjB,CAA1B;AAMH;;AACD,WAAO,eAAe,CAAC,OAAvB;AACH;;AACD,MAAI,YAAY,GAAG,kBAAkB,EAArC;AACA,EAAA,YAAY,CAAC,UAAb,CAAwB,cAAxB;AACA,EAAA,YAAY,CAAC,OAAb,GAAuB,OAAvB;AACA,EAAA,SAAS,CAAC,YAAY;AAAE,WAAO,YAAY,CAAC,YAAb,EAAP;AAAqC,GAApD,CAAT;AACA,SAAO,YAAY,CAAC,OAAb,CAAqB,MAArB,CAAP;AACJ","sourcesContent":["import { __assign } from \"tslib\";\nimport { useContext, useState, useRef, useEffect } from 'react';\nimport { MutationData } from '../data/MutationData';\nimport { getApolloContext } from '../context/ApolloContext';\nexport function useMutation(mutation, options) {\n    var context = useContext(getApolloContext());\n    var _a = useState({ called: false, loading: false }), result = _a[0], setResult = _a[1];\n    var updatedOptions = options ? __assign(__assign({}, options), { mutation: mutation }) : { mutation: mutation };\n    var mutationDataRef = useRef();\n    function getMutationDataRef() {\n        if (!mutationDataRef.current) {\n            mutationDataRef.current = new MutationData({\n                options: updatedOptions,\n                context: context,\n                result: result,\n                setResult: setResult\n            });\n        }\n        return mutationDataRef.current;\n    }\n    var mutationData = getMutationDataRef();\n    mutationData.setOptions(updatedOptions);\n    mutationData.context = context;\n    useEffect(function () { return mutationData.afterExecute(); });\n    return mutationData.execute(result);\n}\n//# sourceMappingURL=useMutation.js.map"]},"metadata":{},"sourceType":"module"}