{"ast":null,"code":"import { invariant } from 'ts-invariant';\n\nfunction toPromise(observable) {\n  var completed = false;\n  return new Promise(function (resolve, reject) {\n    observable.subscribe({\n      next: function (data) {\n        if (completed) {\n          process.env.NODE_ENV === \"production\" || invariant.warn(\"Promise Wrapper does not support multiple results from Observable\");\n        } else {\n          completed = true;\n          resolve(data);\n        }\n      },\n      error: reject\n    });\n  });\n}\n\nexport { toPromise };","map":{"version":3,"sources":["toPromise.js"],"names":[],"mappings":";;AACO,SAAS,SAAT,CAAmB,UAAnB,EAA+B;AAClC,MAAI,SAAS,GAAG,KAAhB;AACA,SAAO,IAAI,OAAJ,CAAY,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AAC1C,IAAA,UAAU,CAAC,SAAX,CAAqB;AACjB,MAAA,IAAI,EAAE,UAAU,IAAV,EAAgB;AAClB,YAAI,SAAJ,EAAe;AACX,UAAA,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAAzB,IAAyC,SAAS,CAAC,IAAV,CAAe,mEAAf,CAAzC;AACH,SAFD,MAGK;AACD,UAAA,SAAS,GAAG,IAAZ;AACA,UAAA,OAAO,CAAC,IAAD,CAAP;AACH;AACJ,OATgB;AAUjB,MAAA,KAAK,EAAE;AAVU,KAArB;AAYH,GAbM,CAAP;AAcJ","sourcesContent":["import { invariant } from 'ts-invariant';\nexport function toPromise(observable) {\n    var completed = false;\n    return new Promise(function (resolve, reject) {\n        observable.subscribe({\n            next: function (data) {\n                if (completed) {\n                    invariant.warn(\"Promise Wrapper does not support multiple results from Observable\");\n                }\n                else {\n                    completed = true;\n                    resolve(data);\n                }\n            },\n            error: reject,\n        });\n    });\n}\n//# sourceMappingURL=toPromise.js.map"]},"metadata":{},"sourceType":"module"}